<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddPoint" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="BasicChartTypesDescription" xml:space="preserve">
    <value>Shows the basic chart types and stacking options.</value>
  </data>
  <data name="BasicChartTypesTitle" xml:space="preserve">
    <value>Basic Chart Types</value>
  </data>
  <data name="BubbleChartDescription" xml:space="preserve">
    <value>Shows a bubble chart.</value>
  </data>
  <data name="BubbleChartTitle" xml:space="preserve">
    <value>Bubble Chart</value>
  </data>
  <data name="ConditionalFormattingDescription" xml:space="preserve">
    <value>Shows conditional formatting by customizing plot elements.</value>
  </data>
  <data name="ConditionalFormattingTitle" xml:space="preserve">
    <value>Conditional Formatting</value>
  </data>
  <data name="CustomizingAxesDescription" xml:space="preserve">
    <value>Shows customized axis style and label format.</value>
  </data>
  <data name="CustomizingAxesTitle" xml:space="preserve">
    <value>Customizing Axes</value>
  </data>
  <data name="CustomPlotElementsDescription" xml:space="preserve">
    <value>Shows how to fully customize plot elements.</value>
  </data>
  <data name="CustomPlotElementsTitle" xml:space="preserve">
    <value>Custom Plot Elements</value>
  </data>
  <data name="CustomTooltipsDescription" xml:space="preserve">
    <value>Shows a customized tooltip.</value>
  </data>
  <data name="CustomTooltipsTitle" xml:space="preserve">
    <value>Custom Tooltips</value>
  </data>
  <data name="DataLabelsDescription" xml:space="preserve">
    <value>Shows a simple chart with static data labels.</value>
  </data>
  <data name="DataLabelsTitle" xml:space="preserve">
    <value>Data Labels</value>
  </data>
  <data name="DynamicChartDescription" xml:space="preserve">
    <value>Shows a dynamic, “live” chart.</value>
  </data>
  <data name="DynamicChartTitle" xml:space="preserve">
    <value>Dynamic Charts</value>
  </data>
  <data name="ExportImageDescription" xml:space="preserve">
    <value>Shows how to export an image of FlexChart.</value>
  </data>
  <data name="ExportImageTitle" xml:space="preserve">
    <value>Export Image</value>
  </data>
  <data name="FinancialChartDescription" xml:space="preserve">
    <value>Shows stock data in a candle chart.</value>
  </data>
  <data name="FinancialChartTitle" xml:space="preserve">
    <value>Financial Chart</value>
  </data>
  <data name="GettingStartedDescription" xml:space="preserve">
    <value>Shows a simple chart with tooltips.</value>
  </data>
  <data name="GettingStartedTitle" xml:space="preserve">
    <value>Getting Started</value>
  </data>
  <data name="HitTestDescription" xml:space="preserve">
    <value>Demonstrates use of the FlexChart's hitTest method.</value>
  </data>
  <data name="HitTestTitle" xml:space="preserve">
    <value>Hit Test</value>
  </data>
  <data name="HistogramDescription" xml:space="preserve">
    <value>Shows Histogram Chart.</value>
  </data>
  <data name="HistogramTitle" xml:space="preserve">
    <value>Histogram Chart</value>
  </data>
  <data name="LegendSampleDescription" xml:space="preserve">
    <value>Shows basic chart headers and axis titles.</value>
  </data>
  <data name="LegendSampleTitle" xml:space="preserve">
    <value>Legend and Titles</value>
  </data>
  <data name="LoadAnimationDescription" xml:space="preserve">
    <value>Shows animation modes when data is loaded.</value>
  </data>
  <data name="LoadAnimationTitle" xml:space="preserve">
    <value>Load Animation Mode</value>
  </data>
  <data name="MixedChartTypesDescription" xml:space="preserve">
    <value>Shows a composite chart.</value>
  </data>
  <data name="MixedChartTypesTitle" xml:space="preserve">
    <value>Mixed Chart Types</value>
  </data>
  <data name="MultipleAxesDescription" xml:space="preserve">
    <value>Shows a chart with mutiple Y axes.</value>
  </data>
  <data name="MultipleAxesTitle" xml:space="preserve">
    <value>Multiple Axes</value>
  </data>
  <data name="RemovePoint" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="ScrollingDescription" xml:space="preserve">
    <value>Shows a chart with panning (or scrolling) along the axes.</value>
  </data>
  <data name="ScrollingTitle" xml:space="preserve">
    <value>Scrolling</value>
  </data>
  <data name="ScrollZoomInstructions" xml:space="preserve">
    <value>Drag to scroll/Pinch to zoom</value>
  </data>
  <data name="SelectionModesDescription" xml:space="preserve">
    <value>Shows the different selection modes.</value>
  </data>
  <data name="SelectionModesTitle" xml:space="preserve">
    <value>Selection Modes</value>
  </data>
  <data name="StylingSeriesDescription" xml:space="preserve">
    <value>Shows custom series styling.</value>
  </data>
  <data name="StylingSeriesTitle" xml:space="preserve">
    <value>Styling Series</value>
  </data>
  <data name="ThemingDescription" xml:space="preserve">
    <value>Shows the built-in palettes.</value>
  </data>
  <data name="ThemingTitle" xml:space="preserve">
    <value>Theming</value>
  </data>
  <data name="ToggleSeriesDescription" xml:space="preserve">
    <value>Shows the ability to toggle a series visibility.</value>
  </data>
  <data name="ToggleSeriesTitle" xml:space="preserve">
    <value>Toggle Series</value>
  </data>
  <data name="UpdateAnimationDescription" xml:space="preserve">
    <value>Shows animation when data is updated.</value>
  </data>
  <data name="UpdateAnimationTitle" xml:space="preserve">
    <value>Update Animation</value>
  </data>
  <data name="ZoomingScrollingDescription" xml:space="preserve">
    <value>Shows stretch zoom-out and pinch zoom-in gestures.</value>
  </data>
  <data name="ZoomingScrollingTitle" xml:space="preserve">
    <value>Zooming and Scrolling</value>
  </data>
  <data name="LineMarkerTitle" xml:space="preserve">
    <value>Line Marker</value>
  </data>
  <data name="LineMarkerDescription" xml:space="preserve">
    <value>Shows a moveable marker on top of the chart.</value>
  </data>
  <data name="AnnotationDescription" xml:space="preserve">
    <value>Shows how to display annotations on FlexChart.</value>
  </data>
  <data name="AnnotationTitle" xml:space="preserve">
    <value>Annotations</value>
  </data>
  <data name="ImageSavedDescription" xml:space="preserve">
    <value>The image has been saved to your device's picture album.</value>
  </data>
  <data name="ImageSavedTitle" xml:space="preserve">
    <value>Image Saved</value>
  </data>
  <data name="OKTitle" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="TakeSnapshot" xml:space="preserve">
    <value>Take snapshot</value>
  </data>
  <data name="ChartElement" xml:space="preserve">
    <value>Chart Element</value>
  </data>
  <data name="PointIndex" xml:space="preserve">
    <value>Point Index</value>
  </data>
  <data name="Series" xml:space="preserve">
    <value>Series</value>
  </data>
  <data name="XYValues" xml:space="preserve">
    <value>X Y Values</value>
  </data>
  <data name="ChartType" xml:space="preserve">
    <value>Chart Type</value>
  </data>
  <data name="Stacking" xml:space="preserve">
    <value>Stacking</value>
  </data>
  <data name="UpdatePosition" xml:space="preserve">
    <value>Update Position</value>
  </data>
  <data name="ZoomMode" xml:space="preserve">
    <value>Zoom Mode</value>
  </data>
  <data name="LabelPosition" xml:space="preserve">
    <value>Label Position</value>
  </data>
  <data name="Therming" xml:space="preserve">
    <value>Theming</value>
  </data>
  <data name="Rotated" xml:space="preserve">
    <value>Rotated</value>
  </data>
  <data name="AnimationMode" xml:space="preserve">
    <value>Animation Mode</value>
  </data>
  <data name="Interaction" xml:space="preserve">
    <value>Interaction</value>
  </data>
  <data name="SelectionMode" xml:space="preserve">
    <value>Selection Mode</value>
  </data>
  <data name="VerticalPostion" xml:space="preserve">
    <value>Vertical Postion</value>
  </data>
  <data name="ZonesTitle" xml:space="preserve">
    <value>Zones</value>
  </data>
  <data name="ZonesDescription" xml:space="preserve">
    <value>Shows a zones sample</value>
  </data>
  <data name="PieBasicFeaturesDescription" xml:space="preserve">
    <value>Shows inner radius, offset, and start angle.</value>
  </data>
  <data name="PieBasicFeaturesTitle" xml:space="preserve">
    <value>Basic Features</value>
  </data>
  <data name="PieDataLabelsDescription" xml:space="preserve">
    <value>Shows static data labels.</value>
  </data>
  <data name="PieDataLabelsTitle" xml:space="preserve">
    <value>Data Labels</value>
  </data>
  <data name="PieGettingStartedDescription" xml:space="preserve">
    <value>Shows a simple pie chart with tooltips.</value>
  </data>
  <data name="PieGettingStartedTitle" xml:space="preserve">
    <value>Getting Started</value>
  </data>
  <data name="PieLegendSampleDescription" xml:space="preserve">
    <value>Shows basic header, footer, and legend positioning.</value>
  </data>
  <data name="PieLegendSampleTitle" xml:space="preserve">
    <value>Legend and Titles</value>
  </data>
  <data name="PieSelectionDescription" xml:space="preserve">
    <value>Shows selection animation, offset, and position.</value>
  </data>
  <data name="PieSelectionTitle" xml:space="preserve">
    <value>Selection</value>
  </data>
  <data name="PieThemingDescription" xml:space="preserve">
    <value>Shows available palettes.</value>
  </data>
  <data name="PieThemingTitle" xml:space="preserve">
    <value>Theming</value>
  </data>
  <data name="Footer" xml:space="preserve">
    <value>Footer</value>
  </data>
  <data name="Header" xml:space="preserve">
    <value>Header</value>
  </data>
  <data name="InnerRadius" xml:space="preserve">
    <value>Inner Radius</value>
  </data>
  <data name="IsAnimated" xml:space="preserve">
    <value>IsAnimated</value>
  </data>
  <data name="LegendPosition" xml:space="preserve">
    <value>Legend Position</value>
  </data>
  <data name="Offset" xml:space="preserve">
    <value>Offset</value>
  </data>
  <data name="Reversed" xml:space="preserve">
    <value>Reversed</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SelectedItemOffset" xml:space="preserve">
    <value>Selected Item Offset</value>
  </data>
  <data name="SelectedItemPosition" xml:space="preserve">
    <value>Selected Item Position</value>
  </data>
  <data name="StartAngle" xml:space="preserve">
    <value>Start Angle</value>
  </data>
  <data name="PermissionDenied" xml:space="preserve">
    <value>The permission is denied by user.</value>
  </data>
  <data name="AnnotationLocalization" xml:space="preserve">
    <value>Annotation Localization</value>
  </data>
  <data name="SunburstGettingStartDescription" xml:space="preserve">
    <value>Shows a simple sunburst chart</value>
  </data>
  <data name="SunburstGettingStartTitle" xml:space="preserve">
    <value>Sunburst Getting Started</value>
  </data>
  <data name="LineMarkerAlignment" xml:space="preserve">
    <value>Line Marker Alignment</value>
  </data>
  <data name="LineType" xml:space="preserve">
    <value>Line Type</value>
  </data>
  <data name="BinWidth" xml:space="preserve">
    <value>BinWidth</value>
  </data>
  <data name="CustomPlotElementsScrollingDescription" xml:space="preserve">
    <value>Shows a scrolling custom plot elements sample.</value>
  </data>
  <data name="CustomPlotElementsScrollingTitle" xml:space="preserve">
    <value>Custom Plot Elements Scrolling</value>
  </data>
  <data name="TreeMapDescription" xml:space="preserve">
    <value>Shows the mainly function of tree map control.</value>
  </data>
  <data name="TreeMapTitle" xml:space="preserve">
    <value>Tree Map</value>
  </data>
</root>