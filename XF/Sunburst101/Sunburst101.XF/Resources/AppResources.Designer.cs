//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sunburst101.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class AppResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AppResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Sunburst101.Resources.AppResources", typeof(AppResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Sunburst control has five basic properties that allow you to customize its layout and appearance.
        ///1. innerRadius: Specifies the control&apos;s inner radius to support donut charts.
        ///2. offset: Specifies the offset of the sunburst slices from the center of the control.
        ///3. startAngle: Starting at the nine o&apos;clock position, specifies the angle to start drawing sunburst slices.
        ///4. palette: Specifies an array of default colors to be used when rendering sunburst slices.
        ///5. reversed: Determines whether the cont [rest of string was truncated]&quot;;.
        /// </summary>
        public static string BasicFeaturesDescription {
            get {
                return ResourceManager.GetString("BasicFeaturesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows inner radius, offset, and start angle..
        /// </summary>
        public static string BasicFeaturesDescriptionShort {
            get {
                return ResourceManager.GetString("BasicFeaturesDescriptionShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Basic Features.
        /// </summary>
        public static string BasicFeaturesName {
            get {
                return ResourceManager.GetString("BasicFeaturesName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Basic Features.
        /// </summary>
        public static string BasicFeaturesTitle {
            get {
                return ResourceManager.GetString("BasicFeaturesTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Footer.
        /// </summary>
        public static string Footer {
            get {
                return ResourceManager.GetString("Footer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to copyright © GrapeCity, inc..
        /// </summary>
        public static string FooterContent {
            get {
                return ResourceManager.GetString("FooterContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steps for getting started with Sunburst control in UWP applications:
        ///1. Add SDK reference to C1.UWP.FlexChart assembly.
        ///2. Bind the data to Sunburst..
        /// </summary>
        public static string GettingStartedDescription {
            get {
                return ResourceManager.GetString("GettingStartedDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows a simple sunburst chart with tooltips..
        /// </summary>
        public static string GettingStartedDescriptionShort {
            get {
                return ResourceManager.GetString("GettingStartedDescriptionShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting Started.
        /// </summary>
        public static string GettingStartedName {
            get {
                return ResourceManager.GetString("GettingStartedName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting Started.
        /// </summary>
        public static string GettingStartedTitle {
            get {
                return ResourceManager.GetString("GettingStartedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sample shows how to use the Sunburst chart with grouped CollectionView..
        /// </summary>
        public static string GroupDescription {
            get {
                return ResourceManager.GetString("GroupDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows Sunburst chart with grouped DataCollection..
        /// </summary>
        public static string GroupDescriptionShort {
            get {
                return ResourceManager.GetString("GroupDescriptionShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group Collection.
        /// </summary>
        public static string GroupName {
            get {
                return ResourceManager.GetString("GroupName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group Collection.
        /// </summary>
        public static string GroupTitle {
            get {
                return ResourceManager.GetString("GroupTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Header.
        /// </summary>
        public static string Header {
            get {
                return ResourceManager.GetString("Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sales.
        /// </summary>
        public static string HeaderContent {
            get {
                return ResourceManager.GetString("HeaderContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to create initial page..
        /// </summary>
        public static string InitializationException {
            get {
                return ResourceManager.GetString("InitializationException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inner Radius.
        /// </summary>
        public static string InnerRadius {
            get {
                return ResourceManager.GetString("InnerRadius", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Legend Position: .
        /// </summary>
        public static string LegendPosition {
            get {
                return ResourceManager.GetString("LegendPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The legend properties can be used to customize the appearance of the chart&apos;s legend. The header and footer properties can be used to add titles to the Sunburst control as well.
        ///This example alows you to change the Sunburst&apos;s LegendPosition, Header and Footer properties..
        /// </summary>
        public static string LegendTitleDescription {
            get {
                return ResourceManager.GetString("LegendTitleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows basic header, footer, and legend positioning..
        /// </summary>
        public static string LegendTitleDescriptionShort {
            get {
                return ResourceManager.GetString("LegendTitleDescriptionShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Legend And Titles.
        /// </summary>
        public static string LegendTitlesName {
            get {
                return ResourceManager.GetString("LegendTitlesName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Legend And Titles.
        /// </summary>
        public static string LegendTitleTitle {
            get {
                return ResourceManager.GetString("LegendTitleTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Offset.
        /// </summary>
        public static string Offset {
            get {
                return ResourceManager.GetString("Offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Palette: .
        /// </summary>
        public static string Palette {
            get {
                return ResourceManager.GetString("Palette", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows periodic table in sunburst..
        /// </summary>
        public static string PeriodicTableDescriptionShort {
            get {
                return ResourceManager.GetString("PeriodicTableDescriptionShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Periodic Table.
        /// </summary>
        public static string PeriodicTableTitle {
            get {
                return ResourceManager.GetString("PeriodicTableTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reversed.
        /// </summary>
        public static string Reversed {
            get {
                return ResourceManager.GetString("Reversed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected Item Offset.
        /// </summary>
        public static string SelectedItemOffset {
            get {
                return ResourceManager.GetString("SelectedItemOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected item Position:.
        /// </summary>
        public static string SelectedItemPosition {
            get {
                return ResourceManager.GetString("SelectedItemPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Sunburst control allows you to select data points by clicking or touching a sunburst slice.Use the SelectionMode property to specify whether you want to allow selection by data point or no selection at all(default).
        ///Setting the SelctionMode property to Point causes the Sunburst to update the selection property when the user clicks or touch on a sunburst slice.
        ///The Sunburst offers two additional properties to customize the selection:
        ///SelectedItemOffset: Specifies the offset of the selected sunburst sl [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SelectionDescription {
            get {
                return ResourceManager.GetString("SelectionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows selection animation, offset, and positioning..
        /// </summary>
        public static string SelectionDescriptionShort {
            get {
                return ResourceManager.GetString("SelectionDescriptionShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selection.
        /// </summary>
        public static string SelectionName {
            get {
                return ResourceManager.GetString("SelectionName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selection.
        /// </summary>
        public static string SelectionTitle {
            get {
                return ResourceManager.GetString("SelectionTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Frames must be either be registered before accessing frame session state, or not registered at all..
        /// </summary>
        public static string SessionStateErrorMessage {
            get {
                return ResourceManager.GetString("SessionStateErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Frames can only be registered to one session state key..
        /// </summary>
        public static string SessionStateKeyErrorMessage {
            get {
                return ResourceManager.GetString("SessionStateKeyErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start Angle.
        /// </summary>
        public static string StartAngle {
            get {
                return ResourceManager.GetString("StartAngle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SuspensionManager failed..
        /// </summary>
        public static string SuspensionManagerErrorMessage {
            get {
                return ResourceManager.GetString("SuspensionManagerErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sunburst 101.
        /// </summary>
        public static string TxtAppName {
            get {
                return ResourceManager.GetString("TxtAppName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only &apos;AllItems&apos; is supported as a collection of items..
        /// </summary>
        public static string UniqueIdItemsArgumentException {
            get {
                return ResourceManager.GetString("UniqueIdItemsArgumentException", resourceCulture);
            }
        }
    }
}
